{"openapi": "3.1.0", "info": {"title": "Studio REST API", "version": "1.0.0", "description": "\nDataChain Studio provides REST API for programmatically managing datasets, jobs, and storage operations.\nAll API endpoints require authentication and are scoped to specific teams.\n\n# Authorization:\nAll API endpoints require authentication via a Studio token.\nThe token must be included in the `Authorization` header.\nYou can get a token by using `datachain auth token` after logging in with `datachain auth login` or from Tokens page in the Studio UI Settings.\nOnce you get a token, attach it to the `Authorization` header in the following format:\n```\nAuthorization: Bearer <token>\n```\n\n\n- **Base URL**: `https://studio.datachain.ai/api`\n"}, "paths": {"/api/datachain/jobs/": {"get": {"operationId": "dqlapp_views_job_get_jobs", "summary": "Get Jobs", "parameters": [{"in": "query", "name": "team_name", "schema": {"title": "Team Name", "type": "string"}, "required": true}, {"in": "query", "name": "status", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}, "required": false}, {"in": "query", "name": "limit", "schema": {"default": 20, "title": "Limit", "type": "integer"}, "required": false}, {"in": "query", "name": "job_id", "schema": {"anyOf": [{"format": "uuid", "type": "string"}, {"type": "null"}], "title": "Job Id"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/JobOutput"}, "title": "Response", "type": "array"}}}}}, "description": "Retrieve a list of jobs with optional status filtering.\n\nRequires a token with read access to JOB scope.", "security": [{"TokenHeaderAuthentication": []}]}, "post": {"operationId": "dqlapp_views_job_create_job", "summary": "Create Job", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobOutput"}}}}}, "description": "Creates a job and returns the job metadata.\n\nNote that compute_cluster_name and compute_cluster_id are mutually exclusive.\nRequires a token with write access to JOB scope.", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobInput"}}}, "required": true}, "security": [{"TokenHeaderAuthentication": []}]}}, "/api/datachain/jobs/{job_id}/cancel": {"post": {"operationId": "dqlapp_views_job_cancel_job", "summary": "Cancel Job", "parameters": [{"in": "path", "name": "job_id", "schema": {"format": "uuid", "title": "Job Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ActionFeedback"}}}}}, "description": "Cancel a running or queued job.\n\nRequires a token with write access to JOB scope.", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobCancelInput"}}}, "required": true}, "security": [{"TokenHeaderAuthentication": []}]}}, "/api/datachain/jobs/files": {"post": {"operationId": "dqlapp_views_job_upload_file", "summary": "Upload File", "parameters": [{"in": "query", "name": "team_name", "schema": {"title": "Team Name", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UploadFileOutput"}}}}}, "description": "Upload a file to use with a job.\n\nUse the file id returned by this endpoint in the `files` field of the job input.\nRequires a token with write access to JOB scope.", "requestBody": {"content": {"multipart/form-data": {"schema": {"properties": {"file": {"format": "binary", "title": "File", "type": "string"}}, "required": ["file"], "title": "FileParams", "type": "object"}}}, "required": true}, "security": [{"TokenHeaderAuthentication": []}]}}, "/api/datachain/clusters/": {"get": {"operationId": "dqlapp_views_clusters_get_clusters", "summary": "Get Clusters", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ComputeClusterOutput"}, "title": "Response", "type": "array"}}}}}, "security": [{"TokenHeaderAuthentication": []}]}}}, "components": {"schemas": {"JobOutput": {"properties": {"id": {"format": "uuid", "title": "Id", "type": "string"}, "url": {"example": "https://studio.datachain.ai/team/team_name/datasets/jobs/0502eef6-a32e-45fa-8e3b-d20ecpabbcf0", "title": "Url", "type": "string"}, "status": {"example": "CREATED", "title": "Status", "type": "string"}, "created_at": {"example": "2021-01-01T00:00:00Z", "format": "date-time", "title": "Created At", "type": "string"}, "created_by": {"example": "username", "title": "Created By", "type": "string"}, "finished_at": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "example": "2021-01-01T00:00:00Z", "title": "Finished At"}, "query": {"example": "print('Hello, World!')", "title": "Query", "type": "string"}, "query_type": {"example": "PYTHON", "title": "Query Type", "type": "string"}, "team": {"example": "TeamName", "title": "Team", "type": "string"}, "name": {"example": "QueryName", "title": "Name", "type": "string"}, "workers": {"example": 1, "title": "Workers", "type": "integer"}, "python_version": {"anyOf": [{"type": "string"}, {"type": "null"}], "example": "3.12", "title": "Python Version"}, "requirements": {"anyOf": [{"type": "string"}, {"type": "null"}], "example": "numpy==1.24.0", "title": "Requirements"}, "repository": {"anyOf": [{"type": "string"}, {"type": "null"}], "example": "https://github.com/user/repo", "title": "Repository"}, "environment": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, {"type": "null"}], "example": {"ENV_NAME": "ENV_VALUE"}, "title": "Environment"}, "exit_code": {"anyOf": [{"type": "integer"}, {"type": "null"}], "example": 0, "title": "Exit Code"}, "error_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "example": "Error message", "title": "Error Message"}}, "required": ["id", "url", "status", "created_at", "created_by", "query", "query_type", "team", "name", "workers"], "title": "JobOutput", "type": "object"}, "JobInput": {"properties": {"query": {"example": "print('Hello, World!')", "title": "Query", "type": "string"}, "query_type": {"enum": ["PYTHON", "SHELL"], "example": "PYTHON", "title": "Query Type", "type": "string"}, "team_name": {"example": "TeamName", "title": "Team Name", "type": "string"}, "environment": {"anyOf": [{"type": "string"}, {"type": "null"}], "example": "ENV_NAME=ENV_VALUE", "title": "Environment"}, "workers": {"anyOf": [{"type": "integer"}, {"type": "null"}], "example": 1, "title": "Workers"}, "query_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "example": "QueryName", "title": "Query Name"}, "files": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "example": ["2", "3"], "title": "Files"}, "python_version": {"anyOf": [{"type": "string"}, {"type": "null"}], "example": "3.12", "title": "Python Version"}, "requirements": {"anyOf": [{"type": "string"}, {"type": "null"}], "example": "numpy==1.24.0", "title": "Requirements"}, "repository": {"anyOf": [{"type": "string"}, {"type": "null"}], "example": "https://github.com/user/repo", "title": "Repository"}, "priority": {"anyOf": [{"enum": [0, 1, 2, 3, 4, 5], "type": "integer"}, {"type": "null"}], "example": 1, "title": "Priority"}, "compute_cluster_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "example": "ComputeClusterName", "title": "Compute Cluster Name"}, "compute_cluster_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "example": 1, "title": "Compute Cluster Id"}, "start_after": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "example": "2021-01-01T00:00:00Z", "title": "Start After"}, "cron_expression": {"anyOf": [{"type": "string"}, {"type": "null"}], "example": "0 0 * * *", "title": "Cron Expression"}, "credentials_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "example": "CredentialsName", "title": "Credentials Name"}}, "required": ["query", "query_type"], "title": "JobInput", "type": "object"}, "ActionFeedback": {"properties": {"message": {"example": "Successfully canceled", "title": "Message", "type": "string"}}, "required": ["message"], "title": "ActionFeedback", "type": "object"}, "JobCancelInput": {"properties": {"team_name": {"example": "TeamName", "title": "Team Name", "type": "string"}}, "required": ["team_name"], "title": "JobCancelInput", "type": "object"}, "UploadFileOutput": {"properties": {"id": {"example": 1, "title": "Id", "type": "integer"}, "filename": {"example": "file.txt", "title": "Filename", "type": "string"}, "size": {"example": 100, "title": "Size", "type": "integer"}, "state": {"enum": ["pending", "uploaded", "failed"], "example": "pending", "title": "State", "type": "string"}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "example": "Error message", "title": "Error"}}, "required": ["id", "filename", "size", "state"], "title": "UploadFileOutput", "type": "object"}, "ComputeClusterOutput": {"properties": {"id": {"description": "Must be a member of a classroom in which the user is a leader.", "example": 1, "title": "Id", "type": "integer"}, "name": {"description": "Compute Cluster Name", "example": "ComputeClusterName", "title": "Name", "type": "string"}, "status": {"description": "Compute Cluster Status", "example": "ACTIVE", "title": "Status", "type": "string"}, "cloud_provider": {"description": "Compute Cluster Cloud Provider", "example": "AWS", "title": "Cloud Provider", "type": "string"}, "cloud_credentials": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "Compute Cluster Cloud Credentials", "example": "CredentialsName", "title": "Cloud Credentials"}, "is_active": {"description": "Compute Cluster Is Active", "example": true, "title": "Is Active", "type": "boolean"}, "default": {"type": "boolean", "description": "Compute Cluster Default", "example": true, "title": "Default"}, "max_workers": {"description": "Compute Cluster Max Workers", "example": 1, "title": "Max Workers", "type": "integer"}}, "required": ["id", "name", "status", "cloud_provider", "is_active", "default", "max_workers"], "title": "ComputeClusterOutput", "type": "object"}}, "securitySchemes": {"TokenHeaderAuthentication": {"type": "apiKey", "in": "header", "name": "Authorization"}}}, "servers": []}
